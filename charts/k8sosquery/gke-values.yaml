# Default values file for Uptycs K8sosquery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# NOTE: Daemonset volumeMounts for K8sosquery are different for GKE & other cluster types.
# Hence this file should only be used for GKE clusters.
# For other cluster types such as AKS, EKS, OpenShift & Unmanaged please use values.yaml file.

# Set to true for GKE Autopilot clusters.
isGKEAutopilot: false

# Uptycs cloud service onto which the cluster nodes are enrolled.
uptycsCloud: _UPTYCS_CLOUD_

# Kubernetes resources used by K8sosquery are scoped to uptycs namespace.
namespace: uptycs

# K8sosquery runs as a daemonset meaning one pod on each node of the cluster.
# Daemonset pods run in privileged mode to access the host & container telemetry.
daemonset:
  name: uptycs-osquery
  containers:
    name: uptycs-osquery
    # Image tag will decide if Uptycs protect is enabled or disabled for k8sosquery.
    image_name: uptycs/k8sosquery:_IMAGE_TAG_
    pullPolicy: IfNotPresent
    # To enable Liveness Probe for K8sosquery please follow the instructions from the following url:
    # https://{DOMAIN}{DOMAIN_SUFFIX}/help/docs/knowledge-base/configuration/liveness-probe-k8sosquey-kubequery
    env:
    - name: CHROOT_DIR
      value: /host
    - name: SOFTWARE_DIR
      value: /home/uptycs/osquery
    - name: BINARY_DIR
      value: /home/kubernetes/bin
    # Resources specify the default values for CPU & memory settings for K8sosquery.
    # These can be changed based on the number of containers running in each node of the cluster.
    resources:
      limits:
        cpu: 1000m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 100Mi
    volumeMounts:
    - name: host
      mountPath: /host
      readOnly: true
    # This is mounted read-write and should start with host mount path
    - name: osquery
      mountPath: /host/home/uptycs/osquery
      readOnly: false
    # This is mounted read-write and should start with host mount path
    - name: binary
      mountPath: /host/home/kubernetes/bin
      readOnly: false
    - name: config
      mountPath: /etc/osquery/flags
    - name: secret
      mountPath: /etc/osquery/secrets
  volumes:
  - name: host
    hostPath:
      path: /
  - name: osquery
    hostPath:
      path: /home/uptycs/osquery
  - name: binary
    hostPath:
      path: /home/kubernetes/bin
  - name: secret
    secret:
      secretName: uptycs-secret
  - name: nginxsecret
    secret:
      secretName: nginx-secret
      optional: false
  # Tolerations for K8sosquery pods can be defined here in this section.
  # Taints and tolerations work together to ensure that pods are not scheduled onto inappropriate nodes.
  # For more info please refer to K8s docs: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
  - key: node-role.kubernetes.io/control-plane
    effect: NoSchedule
  # Example toleration for running K8sosquery pods on arm64 architecture K8s nodes:
  # - key: kubernetes.io/arch
  #   operator: Equal
  #   value: arm64
  #   effect: NoSchedule

# Configmap contains osquery flags which define k8sosquery's configuration in the cluster.
# NOTE: Please consult the Uptycs customer support before changing these configuration parameters.
configmap:
  name: uptycs-config
  data:
    # osquery tags are optional & hence empty by default but example usage is:
    # tags: key1/value1,key2/value2,key3/value3
    tags:
    # In order to use a proxy running in the same cluster by service name please specify the complete service name below like this:
    # local_proxy: <proxy_name>.<proxy_namespace>.svc.cluster.local
    local_proxy:

# Uptycs enroll secret & nginx certs are stack specific & are required to communitcate with Uptycs cloud service.
# Enroll secret contains customer identifiers & should match with allowed Uptycs infra config.
# Nginx secret contains all the root CA's accepted by Uptycs cloud.
secrets:
  enroll_secret: __UPTYCS_SECRET__
  nginx_secret: |-
    __NGINX_SECRET__

# Override the release's name.
nameOverride: ""
# Override the release's fullname.
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
