apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubequery
  name: kubequery
  {{- if .Capabilities.APIVersions.Has "config.openshift.io/v1" }}
  namespace: {{ .Values.openshift.namespace.name }}
  {{- else }}
  namespace: {{ .Values.namespace.name }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubequery
  template:
    metadata:
      labels:
        app: kubequery
        cloudprovider: {{.Values.cloudProvider}}
    spec:
      hostname: {{ .Values.deployment.spec.hostname }}
      hostNetwork: {{ .Values.deployment.spec.hostNetwork }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 10
      serviceAccountName: kubequery-sa
      containers:
        - env:
            - name: UPTYCS_CLOUD
              value: {{ .Values.uptycsCloud }}
            {{- if not .Values.auditLogDetections.gke.disable_audit }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /run/secrets/gke/gke.secret
            {{- end}}
          name: uptycs-kubequery
          image: {{ .Values.deployment.spec.containers.image_name }}
          imagePullPolicy: {{ .Values.deployment.spec.containers.pullPolicy }}
          ports:
            - containerPort: 8443
              name: webhook-api
            - containerPort: 8444
              name: gk-webhook-api
          resources:
            limits:
              cpu: {{ .Values.deployment.spec.containers.resources.limits.cpu }}
              memory: {{ .Values.deployment.spec.containers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.deployment.spec.containers.resources.requests.cpu }}
              memory: {{ .Values.deployment.spec.containers.resources.requests.memory }}
          volumeMounts:
          - name: config
            mountPath: /opt/uptycs/config
          - mountPath: /run/secrets/tls
            name: webhook-tls-certs
            readOnly: true
          - mountPath: /opt/uptycs/config/enroll
            name: enrollsecret
            readOnly: true
          - mountPath: /opt/uptycs/etc/nginx
            name: nginxsecret
            readOnly: true
          {{- if not .Values.auditLogDetections.gke.disable_audit }}
          - name: gkesecret
            mountPath: /run/secrets/gke
          {{- end }}
          {{- if not .Values.auditLogDetections.aks.disable_audit }}
          - mountPath: /opt/uptycs/config/eventhub
            name: eventhubsecret
            readOnly: true
          {{- end }}
      volumes:
      - name: config
        configMap:
          name: kubequery-config
      - name: webhook-tls-certs
        secret:
          secretName: webhook-server-tls
      - name: enrollsecret
        secret:
          secretName: enroll.secret
          optional: false
      - name: nginxsecret
        secret:
          secretName: nginx-secret
          optional: false
      {{- if not .Values.auditLogDetections.gke.disable_audit }}
      - name: gkesecret
        secret:
          secretName: gke.secret
      {{- end }}
      {{- if not .Values.auditLogDetections.aks.disable_audit }}
      - name: eventhubsecret
        secret:
          secretName: eventhub.secret
          optional: true
      {{- end }}
