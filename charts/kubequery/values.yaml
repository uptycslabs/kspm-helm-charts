# Default values file for Uptycs Kubequery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Kubernetes resources used by Kubequery are scoped to kubequery namespace.
namespace: kubequery

# Incase of RedHat OpenShift clusters, Kubernetes resources used by Kubequery are scoped to uptycs-kubequery namespace.
openshift:
  namespace:
    name: uptycs-kubequery

# Kubequery runs as a deployment meaning only one pod in a Kubernetes cluster.
deployment:
  spec:
    containers:
      image_name: uptycs/uptycs-kubequery:_UPTYCS_IMAGE_VERSION_
      pullPolicy: IfNotPresent
      # To enable Liveness Probe for Kubequery please follow the instructions from the following url:
      # https://{DOMAIN}{DOMAIN_SUFFIX}/help/docs/knowledge-base/configuration/liveness-probe-k8sosquey-kubequery
      resources:
        limits:
          cpu: 1000m
          memory: 1000Mi
        requests:
          cpu: 200m
          memory: 500Mi
    # This field defines the cluster name that shows up in Uptycs UI.
    hostname: _UPTYCS_CLUSTER_NAME_
    hostNetwork: false

# Uptycs cloud service onto which the cluster is enrolled.
uptycsCloud: _UPTYCS_CLOUD_

# Uptycs protect flag controls if remediation & blocking features are enabled.
uptycsProtectDisabled: _UPTYCS_PROTECT_DISABLED_

# Uptycs protect needs to be enabled to enable admission controllers.
# Both image admission controller & gatekeeper admission controller are disabled by default.
# Enable gatekeeper controller psp flag to install default PSPs.
admissionControllerParameters:
  disable_image_admission_controller: true
  disable_gatekeeper_controller: true
  disable_gatekeeper_controller_psp: true

# Use these options to enable real-time detections on Kubernetes audit logs.
# If you enable detections on audit logs please make sure to fill in the required fields for that specific cloud-provider.
auditLogDetections:
  aks:
    disable_audit: true
    aks_conn_string:
    aks_eventhub_ns:
    aks_eventhub_name:
    aks_eventhub_keyname:
    aks_eventhub_secret: __AKS_EVENTHUB_SECRET__
  eks:
    disable_audit: true
    eks_log_group:
    eks_log_stream:
    eks_log_region:
  gke:
    disable_audit: true
    gke_project_id:
    gke_cluster_name:
    gke_poll_interval:
    gke_secret: __GKE_SECRET__
  unmanaged_cluster:
    disable_audit: true

# Configmap contains kubequery flags which define kubequery's configuration in the cluster.
# NOTE: Please consult the Uptycs customer support before changing these configuration parameters.
configmap:
  data:
    kubequeryFlags: |
      --gatekeeper_audit_interval=_UPTYCS_PROTECT_AUDIT_INTERVAL_
      --disable_events=false
      --vulnerabilities_refresh_mins=1
      --extensions_interval=5
      --extensions_timeout=5
      --schedule_splay_percent=50
      --tls_hostname=_UPTYCS_CLOUD_
      --tls_server_certs=/opt/uptycs/etc/nginx/ca.crt
      --enroll_secret_path=/opt/uptycs/config/enroll/enroll.secret
      --enroll_tls_endpoint=/agent/enroll
      --config_plugin=tls
      --config_tls_endpoint=/agent/config
      --logger_plugin=tls
      --logger_tls_endpoint=/agent/kubequery/log
      --logger_tls_compress=true
      --distributed_plugin=tls
      --distributed_tls_read_endpoint=/agent/distributed_read
      --distributed_tls_write_endpoint=/agent/distributed_write
      --disable_distributed=false
      --distributed_interval=0
      --distributed_tls_max_attempts=3
      --config_refresh=900
    kubequeryConf: |

# Webhook CA certs bundle.
webhook:
  caBundle: _CA_BUNDLE_

# Webhook Server TLS secret is used by Kubequery admission controllers to setup the HTTPS endpoints.
# These endpoints are then called by K8s API server during resource admission.
# This secret contains TLS cert & key for admission controller webhooks.
webhookServerTLS:
  crt: __UPTYCS_WEBHOOK_SERVER_TLS_CRT__
  key: __UPTYCS_WEBHOOK_SERVER_TLS_KEY__

# Uptycs enroll secret & nginx certs are stack specific & are required to communitcate with Uptycs cloud service.
# Enroll secret contains customer identifiers & should match with allowed Uptycs infra config.
# Nginx secret contains all the root CA's accepted by Uptycs cloud.
secrets:
  enroll_secret: __UPTYCS_ENROLL_SECRET__
  nginx_secret: |-
    __UPTYCS_NGINX_CRT__
